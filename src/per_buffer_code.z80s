ORG BUFFER_CODE
draw_tiles:
	; Store return address.
	ld (@+return+1), de

columns_start:
@column_loop: EQU FOR column_count

column_address{@column_loop}:
	ld hl, 128*192 + 32768

IF (@column_loop - 2) & 0xff >= column_count - 3	; I can't find any way to do conjunctions in PyZ80; this should be
tile_page{@column_loop}:							; equivalent to "if(column_loop < 2 || column_loop == column_count - 1)".
	ld a, tiles_full_page
	out (LMPR), a
ENDIF

@sliver_loop: EQU FOR 3

		@diff_address: EQU DIRTY_FLAGS + FLAGS_SIZE - 1 - @sliver_loop - @column_loop*3

		ld a, (@diff_address)		; Get dirty flags.
		ld (@+jp_sliver+1), a		; Use flags directly to select lower byte of jump target.

		ld de, @+next
	@jp_sliver:
IF @column_loop > 0
		jp right_slivers
ELSE
		jp left_slivers
ENDIF
	@next:

NEXT @sliver_loop
NEXT @column_loop
columns_end:

	; Zero out the dirty flags.
	ld bc, 0x0000
	ld sp, DIRTY_FLAGS + FLAGS_SIZE
@zero_loop: EQU FOR 25
	push bc
NEXT @zero_loop
	xor a
	ld (DIRTY_FLAGS + FLAGS_SIZE - 51), a

	; Switch back to main page.
	ld a, EXECPAGE + %00100000
	out (LMPR), a
@return:
	jp 1234

INC "generated/slivers.z80s"

map:
INC "generated/map.z80s"
